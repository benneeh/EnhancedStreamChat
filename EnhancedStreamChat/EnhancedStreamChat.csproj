<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <BeatSaberLocation>D:\Steam\steamapps\common\Beat Saber\</BeatSaberLocation>
    <PluginVersion>2.2.0</PluginVersion>
    <BeatSaberVersion>1.9</BeatSaberVersion>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{205F177C-3995-46B4-854B-9EED576B706D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>EnhancedStreamChat</RootNamespace>
    <AssemblyName>EnhancedStreamChat</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;REQUEST_BOT UNRELEASEDX</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="BSML, Version=1.1.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Plugins\BSML.dll</HintPath>
    </Reference>
    <Reference Include="HMLib, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\HMLib.dll</HintPath>
    </Reference>
    <Reference Include="HMUI, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\HMUI.dll</HintPath>
    </Reference>
    <Reference Include="IPA.Loader">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\IPA.Loader.dll</HintPath>
    </Reference>
    <Reference Include="MainAssembly, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\MainAssembly.dll</HintPath>
    </Reference>
    <Reference Include="StreamCore, Version=1.0.5.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Plugins\StreamCore.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="Unity.TextMeshPro, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\Unity.TextMeshPro.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.AnimationModule">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.AnimationModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.AssetBundleModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.AssetBundleModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.AudioModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.AudioModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.ImageConversionModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.ImageConversionModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.PhysicsModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.TextRenderingModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UIElementsModule">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.UIElementsModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UIModule">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.UIModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UnityWebRequestAssetBundleModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.UnityWebRequestAssetBundleModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UnityWebRequestAudioModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.UnityWebRequestAudioModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UnityWebRequestModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.UnityWebRequestModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UnityWebRequestTextureModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.UnityWebRequestTextureModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UnityWebRequestWWWModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.UnityWebRequestWWWModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.VideoModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.VideoModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.VRModule">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.VRModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.XRModule">
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\UnityEngine.XRModule.dll</HintPath>
    </Reference>
    <Reference Include="VRUI, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(BeatSaberLocation)Beat Saber_Data\Managed\VRUI.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources\**\*" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="**\*.cs" Exclude="bin\**\*;obj\**\*;Plugin.cs;Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ToCompile Include="Plugin.cs"/>
    <ToCompile Include="Properties\AssemblyInfo.cs"/>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>copy /Y "$(TargetDir)$(TargetFileName)" "$(BeatSaberLocation)Plugins"
::copy /Y "$(TargetDir)$(TargetFileName)" "C:\Beat Saber\Plugins"</PostBuildEvent>
  </PropertyGroup>
  <!-- Clean output directories before build -->
  <Target Name="CleanOutputDirs" BeforeTargets="BeforeBuild">
    <RemoveDir Directories="$(OutDir)" />
    <RemoveDir Directories="$(IntermediateOutputPath)" />
  </Target>
  <!-- Replace strings in source files -->
  <Target Name="BeforeBuild">
    <PropertyGroup>
      <IntermediateSourcePath>$(IntermediateOutputPath)src\</IntermediateSourcePath>
    </PropertyGroup>
    <Copy SourceFiles="@(ToCompile)" DestinationFiles="@(ToCompile->'$(IntermediateSourcePath)%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true">
      <Output TaskParameter="CopiedFiles" ItemName="Compile" />
    </Copy>
    <ReplaceFileText InputFilename="$(IntermediateSourcePath)Plugin.cs" OutputFilename="$(IntermediateSourcePath)Plugin.cs" MatchExpression="$PluginVersion$" ReplacementText="$(PluginVersion)" />
    <ReplaceFileText InputFilename="$(IntermediateSourcePath)AssemblyInfo.cs" OutputFilename="$(IntermediateSourcePath)AssemblyInfo.cs" MatchExpression="$PluginVersion$" ReplacementText="$(PluginVersion)" />
  </Target>
  <!-- Package built DLLs into a zip -->
  <Target Name="CreateZip" AfterTargets="AfterBuild" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <ItemGroup>
      <ZipFilesPlugins Include="$(OutDir)\$(TargetFileName)" />
    </ItemGroup>
    <Exec Command="git rev-parse HEAD &gt; $(IntermediateOutputPath)head" />
    <ReadLinesFromFile File="$(IntermediateOutputPath)head">
      <Output TaskParameter="Lines" PropertyName="FullCommitHash" />
    </ReadLinesFromFile>
    <Delete Files="$(IntermediateOutputPath)head" />
    <PropertyGroup>
      <CommitHash>$(FullCommitHash.Substring(0, 8))</CommitHash>
    </PropertyGroup>
    <Copy SourceFiles="@(ZipFilesPlugins)" DestinationFolder="$(IntermediateOutputPath)\zip\Plugins" />
    <ZipDir ZipFileName="$(OutDir)\BeatSaberHTTPStatus-$(PluginVersion)-bs$(BeatSaberVersion)-$(CommitHash).zip" DirectoryName="$(IntermediateOutputPath)\zip" />
  </Target>
  <!-- Source: https://stackoverflow.com/a/38127938 -->
  <UsingTask TaskName="ZipDir" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <ZipFileName ParameterType="System.String" Required="true" />
      <DirectoryName ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.IO.Compression.FileSystem" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs"><![CDATA[
        try
        {
          Log.LogMessage(string.Format("Zipping Directory {0} to {1}", DirectoryName, ZipFileName));
          ZipFile.CreateFromDirectory( DirectoryName, ZipFileName );
          return true;
        }
        catch(Exception ex)
        {
          Log.LogErrorFromException(ex);
          return false;
        }
      ]]></Code>
    </Task>
  </UsingTask>
  <!-- Source: https://stackoverflow.com/a/22571621 -->
  <UsingTask TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
          Log.LogMessage(string.Format("Replacing {0} in {1} to {2}", MatchExpression, InputFilename, ReplacementText));
          File.WriteAllText(
            OutputFilename,
            File.ReadAllText(InputFilename).Replace(MatchExpression, ReplacementText)
          );
        ]]></Code>
    </Task>
  </UsingTask>
</Project>